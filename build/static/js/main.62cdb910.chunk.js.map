{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditExecution.tsx","api/executions-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Executions.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","concat","authConfig","domain","clientId","callbackUrl","Auth","history","Object","classCallCheck","this","auth0","WebAuth","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","_this","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","react_default","a","createElement","Dimmer","active","Loader","content","getExecutions","_x","_getExecutions","apply","arguments","_callee","response","regenerator_default","wrap","_context","prev","next","Axios","get","headers","Content-Type","Authorization","sent","data","abrupt","items","stop","createExecution","_x2","_x3","_createExecution","_callee2","newexecution","_context2","post","JSON","stringify","item","patchExecution","_x4","_x5","_x6","_patchExecution","_callee3","executionId","updatedexecution","_context3","patch","deleteExecution","_x7","_x8","_deleteExecution","_callee4","_context4","delete","getUploadUrl","_x9","_x10","_getUploadUrl","_callee5","_context5","uploadUrl","uploadFile","_x11","_x12","_uploadFile","_callee6","file","_context6","put","EditExecution","_React$PureComponent","_getPrototypeOf2","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","_ref","asyncToGenerator","mark","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","t0","message","finish","inherits","createClass","key","value","react","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Executions","executions","newExecutionName","loadingExecutions","handleNameChange","onEditButtonClick","push","onExecutionCreate","executionDate","newExecution","calculateexecutionDate","name","toConsumableArray","onExecutionDelete","_ref2","filter","Execution","onExecutionCheck","_ref3","pos","done","update","defineProperty","$set","_componentDidMount","Header","as","rendercreateExecutionInput","renderExecutions","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderExecutionsList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","toISOString","App","handleLogin","assertThisInitialized","handleLogout","Segment","style","padding","vertical","container","stackable","react_router","generateMenu","generateCurrentPage","Menu","Item","react_router_dom","to","position","logInLogOutButton","path","exact","render","Executions_Executions","assign","EditExecution_EditExecution","component","LogIn_LogIn","Component","createHistory","ReactDOM","test","hash","components_Callback","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62cdb910.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// execution: Once your application is deployed, copy an API id here so that the frontend could interact with it\nconst apiId = \"h723briz3e\";\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-2.amazonaws.com/dev`;\n\nexport const authConfig = {\n  // execution: Create an Auth0 application and copy values from it into this map\n  domain: \"gzamora-udacity-capstone.us.auth0.com\", // Auth0 domain\n  clientId: \"d6WE3Ms1NjOxWsu5d34o0sBksh9tRgPI\", // Auth0 client id\n  callbackUrl: \"http://localhost:3000/callback\",\n};\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/executions-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditexecutionProps {\n  match: {\n    params: {\n      executionId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditexecutionState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditExecution extends React.PureComponent<\n  EditexecutionProps,\n  EditexecutionState\n> {\n  state: EditexecutionState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.executionId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from \"../config\";\nimport { Execution } from \"../types/Execution\";\nimport { CreateExecutionRequest } from \"../types/CreateExecutionRequest\";\nimport Axios from \"axios\";\nimport { UpdateExecutionRequest } from \"../types/UpdateExecutionRequest\";\n\nexport async function getExecutions(idToken: string): Promise<Execution[]> {\n  console.log(\"Fetching executions\");\n\n  const response = await Axios.get(`${apiEndpoint}/executions`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${idToken}`,\n    },\n  });\n  console.log(\"executions:\", response.data);\n  return response.data.items;\n}\n\nexport async function createExecution(\n  idToken: string,\n  newexecution: CreateExecutionRequest\n): Promise<Execution> {\n  const response = await Axios.post(\n    `${apiEndpoint}/executions`,\n    JSON.stringify(newexecution),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${idToken}`,\n      },\n    }\n  );\n  return response.data.item;\n}\n\nexport async function patchExecution(\n  idToken: string,\n  executionId: string,\n  updatedexecution: UpdateExecutionRequest\n): Promise<void> {\n  await Axios.patch(\n    `${apiEndpoint}/executions/${executionId}`,\n    JSON.stringify(updatedexecution),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${idToken}`,\n      },\n    }\n  );\n}\n\nexport async function deleteExecution(\n  idToken: string,\n  executionId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/executions/${executionId}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${idToken}`,\n    },\n  });\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  executionId: string\n): Promise<string> {\n  const response = await Axios.post(\n    `${apiEndpoint}/executions/${executionId}/attachment`,\n    \"\",\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${idToken}`,\n      },\n    }\n  );\n  return response.data.uploadUrl;\n}\n\nexport async function uploadFile(\n  uploadUrl: string,\n  file: Buffer\n): Promise<void> {\n  await Axios.put(uploadUrl, file);\n}\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createExecution, deleteExecution, getExecutions, patchExecution } from '../api/executions-api'\nimport Auth from '../auth/Auth'\nimport { Execution } from '../types/Execution'\n\ninterface ExecutionsProps {\n  auth: Auth\n  history: History\n}\n\ninterface ExecutionsState {\n  executions: Execution[]\n  newExecutionName: string\n  loadingExecutions: boolean\n}\n\nexport class Executions extends React.PureComponent<ExecutionsProps, ExecutionsState> {\n  state: ExecutionsState = {\n    executions: [],\n    newExecutionName: '',\n    loadingExecutions: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newExecutionName: event.target.value })\n  }\n\n  onEditButtonClick = (executionId: string) => {\n    this.props.history.push(`/executions/${executionId}/edit`)\n  }\n\n  onExecutionCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const executionDate = this.calculateexecutionDate()\n      const newExecution = await createExecution(this.props.auth.getIdToken(), {\n        name: this.state.newExecutionName,\n        executionDate\n      })\n      this.setState({\n        executions: [...this.state.executions, newExecution],\n        newExecutionName: ''\n      })\n    } catch {\n      alert('Execution creation failed')\n    }\n  }\n\n  onExecutionDelete = async (executionId: string) => {\n    try {\n      await deleteExecution(this.props.auth.getIdToken(), executionId)\n      this.setState({\n        executions: this.state.executions.filter(Execution => Execution.executionId != executionId)\n      })\n    } catch {\n      alert('Execution deletion failed')\n    }\n  }\n\n  onExecutionCheck = async (pos: number) => {\n    try {\n      const Execution = this.state.executions[pos]\n      await patchExecution(this.props.auth.getIdToken(), Execution.executionId, {\n        name: Execution.name,\n        executionDate: Execution.executionDate,\n        done: !Execution.done\n      })\n      this.setState({\n        executions: update(this.state.executions, {\n          [pos]: { done: { $set: !Execution.done } }\n        })\n      })\n    } catch {\n      alert('Execution deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const executions = await getExecutions(this.props.auth.getIdToken())\n      this.setState({\n        executions,\n        loadingExecutions: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch Executions: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">Executions</Header>\n\n        {this.rendercreateExecutionInput()}\n\n        {this.renderExecutions()}\n      </div>\n    )\n  }\n\n  rendercreateExecutionInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New execution',\n              onClick: this.onExecutionCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"Automated Suite execution # ....\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderExecutions() {\n    if (this.state.loadingExecutions) {\n      return this.renderLoading()\n    }\n\n    return this.renderExecutionsList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading Executions\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderExecutionsList() {\n    return (\n      <Grid padded>\n        {this.state.executions.map((executions, pos) => {\n          return (\n            <Grid.Row key={executions.executionId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onExecutionCheck(pos)}\n                  checked={executions.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {executions.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {executions.executionDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(executions.executionId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onExecutionDelete(executions.executionId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {executions.attachmentUrl && (\n                <Image src={executions.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateexecutionDate(): string {\n    var isoDateString = new Date().toISOString();\n    return isoDateString\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditExecution } from './components/EditExecution'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Executions } from './components/Executions'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Executions {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/executions/:executionId/edit\"\n          exact\n          render={props => {\n            return <EditExecution {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}